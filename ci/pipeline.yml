resource_types:
- name: pull-request
  type: docker-image
  source:
    repository: jtarchie/pr
- name: github-status-resource
  type: docker-image
  source:
    repository: dpb587/github-status-resource
    tag: master
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest
resources:
- name: git-repo
  type: git
  source:
    uri: ((github-repo))
    branch: ((branch))
    ignore_paths: ["ci/images/*"]
- name: git-pull-request
  type: pull-request
  source:
    access_token: ((github-access-token))
    repo: spring-io/start.spring.io
    base: ((branch))
- name: ci-images-git-repo
  type: git
  source:
    uri: ((github-repo))
    branch: ((branch))
    paths: ["ci/images/*"]
- name: start-site-ci-image
  type: docker-image
  source:
    repository: springci/start-site-ci-image
    username: ((docker-hub-username))
    password: ((docker-hub-password))
    tag: ((branch))
- name: cf-resource
  type: cf
  source:
    api: ((cf-api))
    username: ((cf-username))
    password: ((cf-password))
    organization: ((cf-org))
    space: ((cf-space))
- name: slack-alert
  type: slack-notification
  source:
    url: ((slack-webhook-url))
- name: repo-status-build
  type: github-status-resource
  source:
    repository: spring-io/start.spring.io
    access_token: ((github-access-token))
    branch: ((branch))
    context: build
jobs:
- name: build-start-site-ci-image
  plan:
  - get: ci-images-git-repo
    trigger: true
  - put: start-site-ci-image
    params:
      build: ci-images-git-repo/ci/images/start-site-ci-image
- name: build-and-deploy
  serial: true
  plan:
  - get: start-site-ci-image
  - get: git-repo
    trigger: true
  - put: repo-status-build
    params: { state: "pending", commit: "git-repo" }
  - do:
    - task: build-service.yml
      image: start-site-ci-image
      file: git-repo/ci/tasks/build-service.yml
      on_failure:
        do:
        - put: repo-status-build
          params: { state: "failure", commit: "git-repo" }
        - put: slack-alert
          params:
            text: ":concourse-failed: <https://ci.spring.io/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}|failure: ${BUILD_PIPELINE_NAME} ${BUILD_JOB_NAME}>"
            silent: true
            icon_emoji: ":concourse:"
            username: concourse-ci
  - put: repo-status-build
    params: { state: "success", commit: "git-repo" }
  - put: slack-alert
    params:
      text: ":concourse-succeeded: <https://ci.spring.io/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}|sucess: ${BUILD_PIPELINE_NAME} ${BUILD_JOB_NAME}>"
      silent: true
      icon_emoji: ":concourse:"
      username: concourse-ci
  - put: cf-resource
    params:
      manifest: git-repo/ci/manifests/manifest.yml
      path: output/start-site.jar
      current_app_name: start
      environment_variables:
        INITIALIZR_ENV_FORCESSL: "true"
        INITIALIZR_ENV_GOOGLE_ANALYTICS_TRACKING_CODE: ((google-analytics-tracking-code))
        INITIALIZR_STATS_ELASTIC_URI: ((elastic-uri))
- name: build-pull-requests
  serial: true
  public: true
  plan:
  - get: start-site-ci-image
  - get: git-repo
    resource: git-pull-request
    trigger: true
    version: every
  - do:
    - put: git-pull-request
      params:
        path: git-repo
        status: pending
    - task: build-project
      image: start-site-ci-image
      file: git-repo/ci/tasks/build-service.yml
      on_success:
        put: git-pull-request
        params:
          path: git-repo
          status: success
      on_failure:
        put: git-pull-request
        params:
          path: git-repo
          status: failure
groups:
- name: "Build and Deploy"
  jobs:
  - build-and-deploy
- name: "Build Pull Requests"
  jobs:
  - "build-pull-requests"
- name: "CI Images"
  jobs:
  - build-start-site-ci-image