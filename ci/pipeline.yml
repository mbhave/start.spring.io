---
resource_types:
- name: kpack-image
  type: registry-image
  source:
    repository: gcr.io/cf-build-service-public/concourse-kpack-resource
- name: artifactory-resource
  type: docker-image
  source:
    repository: springio/artifactory-resource
    tag: 0.0.13-SNAPSHOT
- name: pull-request
  type: docker-image
  source:
    repository: jtarchie/pr
- name: github-status-resource
  type: docker-image
  source:
    repository: dpb587/github-status-resource
    tag: master
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest
resources:
- name: kpack
  type: kpack-image
  source:
    image: "initializr-k8s-image"
    namespace: "spring-initializr"
    gke:
      json_key: ((kpack-resource-account-key))
      kubeconfig: ((shipyard-kubeconfig))
- name: git-repo
  type: git
  icon: github-circle
  source:
    uri: ((github-repo))
    username: ((github-username))
    password: ((github-password))
    branch: ((branch))
- name: build-project-git-repo
  type: git
  icon: github-circle
  source:
    uri: ((github-repo))
    branch: ((branch))
    ignore_paths: ["ci/config/deployment.yml"]
- name: deploy-git-repo
  type: git
  icon: github-circle
  source:
    uri: ((github-repo))
    branch: ((branch))
    paths: ["ci/config/deployment.yml"]
- name: artifactory-repo
  type: artifactory-resource
  icon: package-variant
  source:
    uri: ((artifactory-server))
    username: ((artifactory-username))
    password: ((artifactory-password))
    build_name: ((build-name))
- name: git-pull-request
  type: pull-request
  source:
    access_token: ((github-ci-pull-request-token))
    repo: spring-io/start.spring.io
    base: ((branch))
- name: ci-images-git-repo
  type: git
  source:
    uri: ((github-repo))
    branch: ((branch))
    paths: ["ci/images/*"]
- name: start-site-ci-image
  type: docker-image
  source:
    repository: springci/start-site-ci-image
    username: ((docker-hub-username))
    password: ((docker-hub-password))
    tag: ((branch))
- name: slack-alert
  type: slack-notification
  source:
    url: ((slack-webhook-url))
- name: repo-status-build
  type: github-status-resource
  source:
    repository: spring-io/start.spring.io
    access_token: ((github-ci-status-token))
    branch: ((branch))
    context: build
- name: daily
  type: time
  source: { interval: "24h" }
jobs:
- name: build-start-site-ci-image
  plan:
    - get: ci-images-git-repo
      trigger: true
    - put: start-site-ci-image
      params:
        build: ci-images-git-repo/ci/images/
        dockerfile: ci-images-git-repo/ci/images/start-site-ci-image/Dockerfile
- name: build-project
  plan:
    - get: git-repo
      resource: build-project-git-repo
      trigger: true
    - get: start-site-ci-image
    - task: build
      image: start-site-ci-image
      file: git-repo/ci/tasks/build-service.yml
      params:
        GOOGLE_TAGMANAGER_ID: ((google-tagmanager-id))
      on_failure:
        do:
          - put: repo-status-build
            params: { state: "failure", commit: "git-repo" }
          - put: slack-alert
            params:
              text: ":concourse-failed: <https://ci.spring.io/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}|failure: ${BUILD_PIPELINE_NAME} ${BUILD_JOB_NAME}>"
              silent: true
              icon_emoji: ":concourse:"
              username: concourse-ci
    - put: artifactory-repo
      params:
        repo: ((artifactory-repo))
        folder: distribution-repository
        build_uri: "https://ci.spring.io/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}"
        build_number: "${BUILD_PIPELINE_NAME}-${BUILD_JOB_NAME}-${BUILD_NAME}"
        disable_checksum_uploads: true
    - put: repo-status-build
      params: { state: "success", commit: "git-repo" }
- name: update-image
  plan:
    - get: git-repo
    - get: start-site-ci-image
    - get: artifactory-repo
      trigger: true
    - task: get-blob-url
      image: start-site-ci-image
      file: git-repo/ci/tasks/get-blob-url.yml
      params:
        ARTIFACTORY_SERVER: ((artifactory-server))
        ARTIFACTORY_REPO: ((artifactory-repo))
    - put: kpack
      params:
        blob_url_file: blob-url/url
- name: update-deployment
  plan:
    - get: git-repo
    - get: kpack
      trigger: true
    - get: start-site-ci-image
    - task: update-deployment
      image: start-site-ci-image
      file: git-repo/ci/tasks/update-deployment.yml
    - put: git-repo
      params:
        repository: updated-git-repo
- name: deploy
  plan:
    - get: deploy-git-repo
      trigger: true
    - get: start-site-ci-image
    - get: git-repo
    - task: deploy
      image: start-site-ci-image
      file: git-repo/ci/tasks/deploy.yml
      params:
        KEY: ((developer-account-key))
        ELASTIC_URI: ((elastic-uri))
    - put: slack-alert
      params:
        text: ":concourse-succeeded: <https://ci.spring.io/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}|sucess: ${BUILD_PIPELINE_NAME} ${BUILD_JOB_NAME}>"
        silent: true
        icon_emoji: ":concourse:"
        username: concourse-ci
- name: verify
  serial: true
  public: true
  plan:
    - get: start-site-ci-image
    - get: daily
      trigger: true
    - get: git-repo
      resource: build-project-git-repo
      trigger: true
    - do:
      - task: verify-service.yml
        image: start-site-ci-image
        file: git-repo/ci/tasks/verify-service.yml
        on_failure:
          do:
          - put: slack-alert
            params:
              text: ":concourse-failed: <https://ci.spring.io/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}|failure: ${BUILD_PIPELINE_NAME} ${BUILD_JOB_NAME}>"
              silent: true
              icon_emoji: ":concourse:"
              username: concourse-ci
    - put: slack-alert
      params:
        text: ":concourse-succeeded: <https://ci.spring.io/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}|sucess: ${BUILD_PIPELINE_NAME} ${BUILD_JOB_NAME}>"
        silent: true
        icon_emoji: ":concourse:"
        username: concourse-ci
- name: build-pull-requests
  serial: true
  public: true
  plan:
    - get: start-site-ci-image
    - get: git-repo
      resource: git-pull-request
      trigger: true
      version: every
    - do:
        - put: git-pull-request
          params:
            path: git-repo
            status: pending
        - task: build-project
          image: start-site-ci-image
          file: git-repo/ci/tasks/build-service.yml
          on_success:
            put: git-pull-request
            params:
              path: git-repo
              status: success
          on_failure:
            put: git-pull-request
            params:
              path: git-repo
              status: failure
groups:
  - name: "Build"
    jobs:
      - "build-project"
      - "verify"
  - name: "Build Pull Requests"
    jobs:
      - "build-pull-requests"
  - name: "CI Images"
    jobs:
      - build-start-site-ci-image
  - name: "Update Image"
    jobs: ["update-image"]
  - name: "Update Deployment"
    jobs: ["update-deployment"]
  - name: "Deploy"
    jobs: ["deploy"]
